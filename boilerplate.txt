/*
-api (backend)
  -src
    -controllers
      -user
        -ConrtollerDeleteUser.js
        -ControllerGetUsers.js
        -ControllerPostUser.js
        -ControllerUpdateUser.js

      -routeControllerRecipes.js
    -routes
      -index.js
      -routeUsers.js
      -routeRecipes.js
    -models
      -Users.js
      -Recipes.js
    -helpers/utils
      -Auth.js
      -routeProtection.js (jwt)
    -function
      -callOtherApi (haces el pedido a api, y guardas la info en tu base de datos. Aca reformateas la informacion para que coincida con tu base de datos.)
        -apiCormillot.js 
        -apiNutrilon.js 
    -db.js
    -app.js
  -index.js
  -.env
  
-client (front)

*/

/* 
modelo de User

...{
...
isAdmin: {
  type: DataType.BOOLEAN
  allowNull: false
  defaultValue: false  
},

userType:{
  type: DataType.ENUM (nutricionist, admin, user, gest)
}
}...


*/

/*
Front
...
if (user.userType = "nutricionist"){
  <NavBar/>
  <Routes>
    <Route to="/main" element={<MainTitle/>} />
  </Rotues>
}
if(user.userType = "admin"){
  <NavBar/>
  <Routes>
    <Route to="/diets" element={<Diets/>}/>
  <Routes/>
}
...

//Diets

<Routes>
  <Route to="/aca" element(<otroElemento/>)
<Routes/>
*/

//http://localhost:3000/diets/aca